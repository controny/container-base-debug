name: Docker Build and Publish

on:
  schedule:
    - cron: '21 21 * * 5'
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile*'
      - '.github/workflows/*'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile*'
      - '.github/workflows/*'

env:
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # Dockerhub image name
  IMAGE_NAME: gcyang/container-base-debug

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile_deepspeed
            tag_suffix: deepspeed
          - dockerfile: Dockerfile_centos7
            tag_suffix: centos7
          - dockerfile: Dockerfile_gpt_neox
            tag_suffix: gpt_neox

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-${{ matrix.tag_suffix }}
          key: ${{ runner.os }}-buildx-${{ matrix.tag_suffix }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-${{ matrix.tag_suffix }}-

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}:${{ matrix.tag_suffix }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.tag_suffix }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.tag_suffix }}-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-${{ matrix.tag_suffix }}
          mv /tmp/.buildx-cache-${{ matrix.tag_suffix }}-new /tmp/.buildx-cache-${{ matrix.tag_suffix }}
